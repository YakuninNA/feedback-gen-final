"""TESTDB13

Revision ID: 2f0f7db982de
Revises: 
Create Date: 2024-11-07 11:54:53.705538

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2f0f7db982de'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('role_name', postgresql.ENUM('ADMIN', 'INTERVIEWER', name='roleenum'),
                              server_default=sa.text("'INTERVIEWER'"), nullable=False),
                    sa.Column('permission', sa.JSON(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('surname', sa.String(), nullable=False),
                    sa.Column('username', sa.String(), nullable=False),
                    sa.Column('reg_time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
                    sa.Column('role_id', sa.Integer(), nullable=False),
                    sa.Column('email', sa.String(length=320), nullable=False),
                    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('is_superuser', sa.Boolean(), nullable=False),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('id'),
                    sa.UniqueConstraint('username')
                    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('feedback_section',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('reg_time', sa.TIMESTAMP(), nullable=False),
                    sa.Column('interviewer_username', sa.String(), nullable=False),
                    sa.Column('interviewer_full_name', sa.String(), nullable=False),
                    sa.Column('feedback_name', sa.String(), nullable=False),
                    sa.Column('soft_skills', sa.String(), nullable=False),
                    sa.Column('engineering_basics', sa.String(), nullable=False),
                    sa.Column('technical_skills', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['interviewer_username'], ['users.username'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('feedback_section')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
